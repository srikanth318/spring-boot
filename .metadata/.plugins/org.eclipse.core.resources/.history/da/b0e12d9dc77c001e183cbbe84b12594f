package com.security.app.services.impl;

import java.security.Key;
import java.util.Base64.Decoder;
import java.util.Date;

import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Service;

import com.security.app.services.JWTService;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;

@Service
public class JWTServiceImpl {

	private String generateToken(UserDetails userDetails) {
		
		return Jwts.builder().setSubject(userDetails.getUsername())
				.setIssuedAt(new Date(System.currentTimeMillis()))
				.setExpiration(new Date(System.currentTimeMillis() + 1000*60*24))
				.signWith(getSignKey(),SignatureAlgorithm.HS256)
				.compact();
	}
	
	

	private Key getSignKey() {
		byte [] key = Decoders.BASE64.decode("4f1feeca525de4cdb064656007da3edac7895a87ff0ea865693300fb8b6e8f9c");
		return Keys.hmacShaKeyFor(key);
	}
}
